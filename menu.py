import assessment as ast

print("\nWELCOME to Boyan Benev's codding assignment")  

while True:  
    print("\nMAIN MENU")  
    print("1. Are all client ids unique?")  
    print("2. Show NUMBER most profitable client ids")  
    print("3. Calculate the total revenue generated by all clients with less than NUMBER sessions")
    print("4. Who generates the most transactions: the half of the clients with longer sessions or the other half?")
    print("5. Calculate the revenue generated by the NUMBER of client ids with the most transactions")
    print("6. Generate aggregated average session duration by the NUMBER of client ids with the most transactions")
    print("7. Generate aggregated average bounce rate by the NUMBER of client ids with the most transactions")
    print("9. Exit\n") 

    user_choice = int(input("Enter your Choice:"))

    if user_choice == 1:
       print ('\nThis is: ', ast.are_all_client_ids_unique(ast.data_frame))

    elif user_choice == 2:
        number = int(input("Enter your NUMBER:")) 
        print ("The %d most profitable client ids are:\n" %number, ast.most_profitable_clients(ast.data_frame, number))

    elif user_choice == 3:
        number = int(input("Enter your NUMBER:")) 
        print ("\nTotal revenue generated by all clients with less than %d sessions: $" %number, "{:.2f}".format(ast.revenue_with_less_than_num_sesions(ast.data_frame, number)))
        
    elif user_choice == 4:
        print ("\nWho generates the most transactions: ", ast.half_with_most_transactions_by_sessions(ast.data_frame))
        
    elif user_choice == 5:
        number = int(input("Enter your NUMBER:")) 
        print ("\nRevenue generated by the %d client ids with the most transactions: $" %number, "{:.2f}".format(ast.revenue_with_most_transaction_limited(ast.data_frame, number)))

    elif user_choice == 6:
        number = int(input("Enter your NUMBER:")) 
        print ("\nAggregated average session duration generated by the %d client ids with the most transactions: " %number, ast.avarage_session_duration(ast.data_frame, number))
    
    elif user_choice == 7:
        number = int(input("Enter your NUMBER:")) 
        print ("\nAggregated average bounce rate in generated by the %d client ids with the most transactions: " %number, "{:.2f}%".format(ast.avarage_bounce_rate(ast.data_frame, number)))
            
    elif user_choice == 9:
        break  

    else:  
        print("\nIncorrect Choice. Please try again")  